name: Deploy-GH-Pages

on:
  push:
    branches: [main]
    paths-ignore:
      # prevent double trigger of deploy on push to branch triggered
      # by update of catalog.json, or generation of images during merge
      - 'public/api/data/catalog.json'
      - 'public/api/data/featured.json'
      - 'public/assets/items/*.png'
      - 'public/assets/multiregions/*.png'

  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          # see fix to allow git commits to protected branch https://github.com/orgs/community/discussions/25305#discussioncomment-5582031
          # https://stackoverflow.com/questions/64076798/how-to-trigger-a-github-actions-workflow-on-push-to-another-branch/64078507#64078507
          token: ${{ secrets.DEPLOY_PAT }}

      - uses: pnpm/action-setup@v2.2.4
        with:
          version: latest

      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'pnpm'

      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
          cache: 'pip'

      - name: Install git-restore-mtime
        run: sudo apt install git-restore-mtime

      - name: Restore mtimes for catalog items
        run: cd catalog && git restore-mtime && cd ../featured && git restore-mtime && cd ../public/api/data && git restore-mtime  && cd ../../..

      - name: Setup python
        run: pip install -r requirements.txt

      - name: Validate catalog items
        run: python scripts/validate_catalog.py
        env:
          GSTORAGE_API_KEY: ${{ secrets.GSTORAGE_API_KEY }}

      - name: Install dependencies
        run: pnpm i && cp .env.github .env

      - name: Merge catalog entries
        run: python scripts/transform_catalog.py && python scripts/transform_featured.py
        env:
          GSTORAGE_API_KEY: ${{ secrets.GSTORAGE_API_KEY }}

      - name: Update catalog items if needed
        run: cd public/api/data && git add . && cd ../../..

      - name: Update detail images
        run: cd public/assets && git add . && cd ../..

      - name: Commit changes if there are any pending
        run: ./scripts/commit-catalog.sh

      - name: Build project
        run: pnpm build

      - name: Upload production-ready build files
        uses: actions/upload-artifact@v3
        with:
          name: production-files
          path: ./dist

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: production-files
          path: ./dist

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
